<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kuka.springtemplate.mapper.UserMapper">
  <!-- <resultMap id="Base_Result_Map" type="com.kuka.springtemplate.model.User">
    <constructor>
      <idArg column="id" javaType="_long" jdbcType="BIGINT" />
      <arg column="username" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap> -->

  <resultMap id="Base_Result_Map" type="com.kuka.springtemplate.model.User">
    <result property="id" column="id"/>
    <result property="username" column="username"/>
    <result property="password" column="password"/>
    <result property="phone" column="phone"/>
  </resultMap>

  <sql id="Base_Column_List">
    id, username, password, phone
  </sql>

  <!-- find all -->
  <select id="findAll" resultType="com.kuka.springtemplate.model.User">
    SELECT 
    <include refid="Base_Column_List" />
    FROM users
  </select>

  <!-- find by id -->
  <select id="findById" parameterType="_long" resultMap="Base_Result_Map">
  <!-- <select id="findById" parameterType="_long" resultType="User"> -->
    SELECT 
    <include refid="Base_Column_List" />
    FROM users
    WHERE id = #{id,jdbcType=BIGINT}
  </select>

  <!-- update user -->
  <update id="updateOne" parameterType="User">
    UPDATE USERS
    <trim prefix="SET" suffixOverrides=",">
      <if test="username!=null">username = #{username,jdbcType=VARCHAR},</if>
      <if test="password!=null">password = #{password,jdbcType=VARCHAR},</if>
      <if test="phone!=null">phone = #{phone,jdbcType=VARCHAR}</if>
    </trim>
    WHERE id = #{id,jdbcType=BIGINT}
  </update>

  <!-- delete by id -->
  <delete id="deleteById">
    DELETE FROM users WHERE id = #{id, jdbcType=BIGINT}
  </delete>

  <!-- create one -->
  <insert id="createOne" parameterType="User" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO users (username, password, phone)
    VALUES (#{username}, #{password}, #{phone});
    <selectKey keyProperty="id" resultType="Long" order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>

</mapper>
